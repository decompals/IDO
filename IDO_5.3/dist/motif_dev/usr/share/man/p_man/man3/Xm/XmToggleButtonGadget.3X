...\" **
...\" **
...\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
...\" **      All Rights Reserved.
...\" **
...\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
...\" **
...\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
...\" **      Maynard, MA.  All Rights Reserved.
...\" **
...\" **
.TH XmToggleButtonGadget 3X "" "" "" ""
...\"
.so /usr/share/lib/tmac/motif/header.all
.so /usr/share/lib/tmac/motif/sml
.so /usr/share/lib/tmac/motif/rsml
...\" ____
.SH NAME
\*LXmToggleButtonGadget \*O\(em The ToggleButtonGadget widget class
.iX "XmToggleButtonGadget"
.iX "widget class" "ToggleButtonGadget"
.SH SYNOPSIS
.sS
.iS
\&#include <Xm/ToggleBG.h>
.iE
.sE
.SH DESCRIPTION
ToggleButtonGadget sets nontransitory state data within an
application.  Usually this gadget consists of an indicator
(square or diamond-shaped) with either text or a pixmap on one side of it.
However,
it can also consist of just text or a pixmap without the indicator.
.PP 
The toggle graphics display a \*L1-of-many\*O
or \*LN-of-many\*O selection state.
When a toggle indicator is displayed, a square indicator shows an
\*LN-of-many\*O
selection state and a diamond-shaped indicator shows a
\*L1-of-many\*O selection state.
.PP 
ToggleButtonGadget
implies a selected or unselected
state.  In the case of a label and an indicator, an
empty indicator (square or diamond-shaped) indicates that ToggleButtonGadget
is unselected, and a filled
indicator shows that it is selected.  In the case of a pixmap
toggle, different pixmaps are used to display the selected/unselected states.
.PP 
.ne 7
The default behavior associated with a ToggleButtonGadget in a menu depends on
the type of menu system in which it resides.
By default, \*LBSelect\*O controls the behavior of the ToggleButtonGadget.
In addition, \*LBMenu\*O controls the behavior of the ToggleButtonGadget if
it resides in a PopupMenu system.
The actual mouse button used is determined by its RowColumn parent.
.PP 
To accommodate the toggle indicator when created,
Label's resource \*LXmNmarginLeft\*O may
be increased.
.SS "Classes"
ToggleButtonGadget inherits behavior and
resources from \*LObject\*O, \*LRectObj\*O, \*LXmGadget\*O
and \*LXmLabelGadget\*O classes.
.PP 
The class pointer is \*LxmToggleButtonGadgetClass\*O.
.PP 
The class name is \*LXmToggleButtonGadget\*O.
.SS "New Resources"
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \*LXmN\*O or
\*LXmC\*O prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \*LXm\*O prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between
words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \*LXtSetValues\*O (S),
retrieved by using \*LXtGetValues\*O (G), or is not applicable (N/A).
.P 
.wH .in 0 
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
XmToggleButtonGadget Resource Set
Name	Class	Type	Default	Access
_
XmNarmCallback	XmCArmCallback	XtCallbackList	NULL	C
XmNdisarmCallback	XmCDisarmCallback	XtCallbackList	NULL	C
XmNfillOnSelect	XmCFillOnSelect	Boolean	dynamic	CSG
XmNindicatorOn	XmCIndicatorOn	Boolean	True	CSG
XmNindicatorSize	XmCIndicatorSize	Dimension	dynamic	CSG
XmNindicatorType	XmCIndicatorType	unsigned char	dynamic	CSG
XmNselectColor	XmCSelectColor	Pixel	dynamic	CSG
XmNselectInsensitivePixmap	XmCSelectInsensitivePixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNselectPixmap	XmCSelectPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNset	XmCSet	Boolean	False	CSG
XmNspacing	XmCSpacing	Dimension	4	CSG
XmNvalueChangedCallback	XmCValueChangedCallback	XtCallbackList	NULL	C
XmNvisibleWhenOff	XmCVisibleWhenOff	Boolean	dynamic	CSG
.TE
.nL
.ne 10
.VL  
.LI "\*LXmNarmCallback\*O"
Specifies a list of callbacks
that is called when the ToggleButtonGadget is armed.
To arm this gadget, press the active mouse button
while the pointer is inside the ToggleButtonGadget.
For this callback, the reason is \*LXmCR_ARM\*O.
.LI "\*LXmNdisarmCallback\*O"
Specifies a list of callbacks
called when ToggleButtonGadget is disarmed.
To disarm this gadget, press and release the active
mouse button while the pointer is inside the ToggleButtonGadget.
The gadget is also disarmed
when the user moves out of the gadget
and releases the mouse button when the pointer is outside the gadget.
For this callback, the reason is \*LXmCR_DISARM\*O.
.LI "\*LXmNfillOnSelect\*O"
Fills the indicator with the color specified in
\*LXmNselectColor\*O and switches the top and bottom shadow
colors when set to True.  Otherwise, it switches only the top
and bottom shadow colors.  The default is set to the value
of \*LXmNindicatorOn\*O.  When \*LXmNindicatorOn\*O is False,
and \*LXmNfillOnSelect\*O is set explicitly to True, the
background is filled with the color specified by \*LXmNselectColor\*O.
.LI "\*LXmNindicatorOn\*O"
Specifies that a toggle indicator is drawn to one side of the toggle
text or pixmap when set to True.  When set to False, no space is allocated
for the indicator, and it is not displayed.  If \*LXmNindicatorOn\*O is True,
the indicator shadows are switched when the button is selected or unselected,
but any shadows around the entire gadget are not switched.
However, if
\*LXmNindicatorOn\*O is False, any shadows around the
entire gadget are switched when the toggle is selected or unselected.
.LI "\*LXmNindicatorSize\*O"
Sets the size of the indicator.
If no value is specified, the size of the indicator is based on the size
of the label string or pixmap.
If the label string or pixmap changes, the size of the indicator is
recomputed based on the size of the label string or pixmap.
Once a
value has been specified for \*LXmNindicatorSize\*O, the
indicator has that size, regardless of the size of the label string or
pixmap, until a new value is specified.
.LI "\*LXmNindicatorType\*O"
Specifies if the indicator is a \*L1-of\*O or
an \*LN-of\*O indicator.  For the \*L1-of\*O indicator, the
value is \*LXmONE_OF_MANY\*O.  For the \*LN-of\*O indicator,
the value is \*LXmN_OF_MANY\*O.  The \*LN-of-many\*O
indicator is square.  The \*L1-of-many\*O indicator
is diamond-shaped.  This resource specifies only the visuals
and does not enforce the behavior.
When the ToggleButtonGadget is in a RadioBox, the default is
\*LXmONE_OF_MANY\*O; otherwise, the default is \*LXmN_OF_MANY\*O.
.LI "\*LXmNselectColor\*O"
Allows the application to specify what color fills the center of the
square or diamond-shaped indicator when it is set.  If this color is
the same as either the top or the bottom shadow color of the indicator,
a one-pixel-wide margin is left between the shadows and the fill;  otherwise,
it is filled completely.  This resource's default for a color display is
a color between the background and the bottom shadow color.  For a
monochrome display, the default is set to the foreground color.  To set
the background of the button to \*LXmNselectColor\*O when
\*LXmNindicatorOn\*O is False, the value of \*LXmNfillOnSelect\*O must
be explicitly set to True.
.LI "\*LXmNselectInsensitivePixmap\*O"
Specifies a pixmap used as the button face when the ToggleButtonGadget
is selected and
the button is insensitive if the LabelGadget resource \*LXmNlabelType\*O
is \*LXmPIXMAP\*O.  If the ToggleButtonGadget
is unselected and the button is insensitive, the pixmap in
\*LXmNlabelInsensitivePixmap\*O is used as the button face.
If no value is specified for \*LXmNlabelInsensitivePixmap\*O, that
resource is set to the value specified for
\*LXmNselectInsensitivePixmap\*O.
.LI "\*LXmNselectPixmap\*O"
Specifies the pixmap to be used as the button
face if \*LXmNlabelType\*O is \*LXmPIXMAP\*O and
the ToggleButtonGadget is selected.
When the ToggleButtonGadget is unselected,
the pixmap specified in LabelGadget's \*LXmNlabelPixmap\*O is used.
If no value is specified for \*LXmNlabelPixmap\*O, that resource is set
to the value specified for \*LXmNselectPixmap\*O.
.LI "\*LXmNset\*O"
Represents the state of the ToggleButton.  A value of false indicates
that the ToggleButton is not set.   A value of true indicates that
the ToggleButton is set.  Setting this resource sets the state of the
ToggleButton.
.LI "\*LXmNspacing\*O"
Specifies the amount of spacing between the toggle indicator and the
toggle label (text or pixmap).
.nL
.ne 6
.LI "\*LXmNvalueChangedCallback\*O"
Specifies a list of callbacks
called when the ToggleButtonGadget value
is changed.  To change the value,
press and release the active mouse button while the pointer
is inside the ToggleButtonGadget.  This action
also causes the gadget to be disarmed.
For this callback, the reason is \*LXmCR_VALUE_CHANGED\*O.
.LI "\*LXmNvisibleWhenOff\*O"
Indicates that the toggle indicator is visible in the unselected state when
the Boolean value is True.
When the ToggleButtonGadget is in a menu, the default value is False.
When the ToggleButtonGadget is in a RadioBox, the default value is True.
.LE
.nL
.ne 6
.SS "Inherited Resources"
ToggleButtonGadget inherits behavior and resources from the following
superclasses.  For a complete description of each resource, refer to the
man page for that superclass.
.P 
.wH .in 0 
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
XmLabelGadget Resource Set
Name	Class	Type	Default	Access
_
XmNaccelerator	XmCAccelerator	String	NULL	CSG
XmNacceleratorText	XmCAcceleratorText	XmString	NULL 	CSG
XmNalignment	XmCAlignment	unsigned char	dynamic	CSG
XmNfontList	XmCFontList	XmFontList	dynamic	CSG
XmNlabelInsensitivePixmap	XmCLabelInsensitivePixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNlabelPixmap	XmCLabelPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNlabelString	XmCXmString	XmString	dynamic	CSG
XmNlabelType	XmCLabelType	unsigned char	XmSTRING	CSG
XmNmarginBottom	XmCMarginBottom	Dimension	dynamic	CSG
XmNmarginHeight	XmCMarginHeight	Dimension	2	CSG
XmNmarginLeft	XmCMarginLeft	Dimension	dynamic	CSG
XmNmarginRight	XmCMarginRight	Dimension	0	CSG
XmNmarginTop	XmCMarginTop	Dimension	dynamic	CSG
XmNmarginWidth	XmCMarginWidth	Dimension	2	CSG
.wH .tH
XmNmnemonic	XmCMnemonic	KeySym	NULL	CSG
XmNmnemonicCharSet	XmCMnemonicCharSet	String	dynamic	CSG
XmNrecomputeSize	XmCRecomputeSize	Boolean	True	CSG
XmNstringDirection	XmCStringDirection	XmStringDirection	dynamic	CSG
.TE
.wH .in  
.P 
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
XmGadget Resource Set
Name	Class	Type	Default	Access
_
XmNbottomShadowColor	XmCBottomShadowColor	Pixel	dynamic	G
XmNhelpCallback	XmCCallback	XtCallbackList	NULL	C
XmNhighlightColor	XmCHighlightColor	Pixel	dynamic	G
XmNhighlightOnEnter	XmCHighlightOnEnter	Boolean	False	CSG
XmNhighlightThickness	XmCHighlightThickness	Dimension	2	CSG
XmNnavigationType	XmCNavigationType	XmNavigationType	XmNONE	CSG
XmNshadowThickness	XmCShadowThickness	Dimension	dynamic	CSG
XmNtopShadowColor	XmCTopShadowColor	Pixel	dynamic	G
XmNtraversalOn	XmCTraversalOn	Boolean	True	CSG
XmNunitType	XmCUnitType	unsigned char	dynamic	CSG
XmNuserData	XmCUserData	XtPointer	NULL	CSG
.TE
.P 
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
RectObj Resource Set
Name	Class	Type	Default	Access
_
XmNancestorSensitive	XmCSensitive	Boolean	dynamic	G
XmNborderWidth	XmCBorderWidth	Dimension	0	CSG
XmNheight	XmCHeight	Dimension	dynamic	CSG
XmNsensitive	XmCSensitive	Boolean	True	CSG
XmNwidth	XmCWidth	Dimension	dynamic	CSG
XmNx	XmCPosition	Position	0	CSG
XmNy	XmCPosition	Position	0	CSG
.TE
.P
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
Object Resource Set
Name	Class	Type	Default	Access
_
XmNdestroyCallback	XmCCallback	XtCallbackList	NULL	C
.TE
.SS "Callback Information"
A pointer to the following structure is passed to each callback:
.sS
.iS
.ta .25i 1.50i
typedef struct
{
	int	\*Vreason\*L;
	\*LXEvent	\*V* event\*L;
	\*Lint	\*Vset\*L;
} XmToggleButtonCallbackStruct;
.iE
.sE
.wH .fi
.VL .75i 
.LI "\*Vreason\*O"
Indicates why the callback was invoked
.LI "\*Vevent\*O"
Points to the \*LXEvent\*O that triggered the callback
.LI "\*Vset\*O"
Reflects the ToggleButtonGadget's current state when the callback occurred,
either True (selected) or False (unselected)
.LE
.SS "Behavior"
XmToggleButtonGadget includes behavior from XmGadget.
XmToggleButtonGadget includes menu traversal behavior from XmLabelGadget.
Additional XmToggleButtonGadget behavior is described below:
.VL
.LI "\*LBDrag\ Press\*O:"
Drags the contents of a ToggleButtonGadget label, identified by
pressing \*LBDrag\*O.  This action creates a DragContext object
whose \*LXmNexportTargets\*O resource is set to "COMPOUND_TEXT" for
a label type of \*LXmSTRING\*O; otherwise, "PIXMAP" if the
label type is \*LXmPIXMAP\*O.  This action is undefined for
ToggleButtonGadgets used in a menu system.
.LI "\*LBSelect\ Press\*O:"
In a menu, this action unposts any menus posted by the ToggleButtonGadget's
parent menu,
disables keyboard traversal for the menu, and enables mouse traversal
for the menu.
It draws the shadow in the armed state
and, unless the button is already armed, calls the \*LXmNarmCallback\*O
callbacks.
.P
Outside a menu, if the button was previously unset, this action does the
following:
If \*LXmNindicatorOn\*O is True, it draws the indicator shadow so that
the indicator looks pressed; if \*LXmNfillOnSelect\*O is True, it fills
the indicator with the color specified by \*LXmNselectColor\*O.
If \*LXmNindicatorOn\*O is False, it draws the button shadow so that the
button looks pressed.
If \*LXmNlabelType\*O is \*LXmPIXMAP\*O, the \*LXmNselectPixmap\*O is
used as the button face.
Calls the \*LXmNarmCallback\*O callbacks.
.P
Outside a menu, if the button was previously set, this action does the
following:
If both \*LXmNindicatorOn\*O and \*LXmNvisibleWhenOff\*O are True, it
draws the indicator shadow so that the indicator looks raised; if
\*LXmNfillOnSelect\*O is True, it fills the indicator with the
background color.
If \*LXmNindicatorOn\*O is False, it draws the button shadow so that the
button looks raised.
If \*LXmNlabelType\*O is \*LXmPIXMAP\*O, the \*LXmNlabelPixmap\*O is
used as the button face.
Calls the \*LXmNarmCallback\*O callbacks.
.LI "\*LBSelect\ Release\*O:"
In a menu, this action does the following:
It unposts all menus in the menu hierarchy.
If the ToggleButtonGadget was previously set, unsets it; if the ToggleButtonGadget
was previously unset, sets it.
It calls the \*LXmNvalueChangedCallback\*O callbacks and then the
\*LXmNdisarmCallback\*O callbacks.
.P
If the button is outside a menu and the pointer is within the button,
this action does the following:
If the button was previously unset, sets it; if the button was
previously set, unsets it.
Calls the \*LXmNvalueChangedCallback\*O callbacks.
.P
If the button is outside a menu, calls the \*LXmNdisarmCallback\*O
callbacks.
.LI "\*LKHelp\*O:"
In a Pulldown or Popup MenuPane, unposts all menus in the menu hierarchy
and,
when the shell's keyboard focus policy is \*LXmEXPLICT\*O,
restores keyboard focus to the widget that had the focus before
the menu system was entered.
Calls the callbacks for \*LXmNhelpCallback\*O if any exist.
If there are no help callbacks for this widget, this action calls the
help callbacks for the nearest ancestor that has them.
.LI "\*KActivate\*O:"
In a menu, does the following: unposts all menus in the menu hierarchy;
unless the button is already armed, calls the \*LXmNarmCallback\*O
callbacks; and calls the \*LXmNvalueChangedCallback\*O and
\*LXmNdisarmCallback\*O callbacks.  Outside a menu,
if the parent is a manager, passes the event to the parent.
.LI "\*LKSelect\*O:"
If the ToggleButtonGadget was previously set, unsets it; if the
ToggleButtonGadget was previously unset, sets it.
.P
In a menu, does the following:
Unposts all menus in the menu hierarchy.
Unless the button is already armed,
calls the \*LXmNarmCallback\*O callbacks.
Calls the \*LXmNvalueChangedCallback\*O and
\*LXmNdisarmCallback\*O callbacks.
.P
Outside a menu, if the button was previously unset, this action does the
following:
If \*LXmNindicatorOn\*O is True, it draws the indicator shadow so that
the indicator looks pressed; if \*LXmNfillOnSelect\*O is True, it fills
the indicator with the color specified by \*LXmNselectColor\*O.
If \*LXmNindicatorOn\*O is False, it draws the button shadow so that the
button looks pressed.
If \*LXmNlabelType\*O
is \*LXmPIXMAP\*O, the \*LXmNselectPixmap\*O is
used as the button face.
Calls the \*LXmNarmCallback\*O, \*LXmNvalueChangedCallback\*O,
\*LXmNdisarmCallback\*O callbacks.
.P
Outside a menu, if the button was previously set, this action does the
following:
If both \*LXmNindicatorOn\*O and \*LXmNvisibleWhenOff\*O are True, it
draws the indicator shadow so that the indicator looks raised; if
\*LXmNfillOnSelect\*O is True, it fills the indicator with the
background color.
If \*LXmNindicatorOn\*O is False, it draws the button shadow so that the
button looks raised.
If \*LXmNlabelType\*O is \*LXmPIXMAP\*O, the \*LXmNlabelPixmap\*O is
used as the button face.
Calls the \*LXmNarmCallback\*O, \*LXmNvalueChangedCallback\*O, and
\*LXmNdisarmCallback\*O callbacks.
.nL
.ne 10
.LI "\*LMAny\ KCancel\*O:"
In a toplevel Pulldown MenuPane from a MenuBar, unposts the menu,
disarms the MenuBar CascadeButton and the MenuBar, and,
when the shell's keyboard focus policy is \*LXmEXPLICT\*O,
restores keyboard
focus to the widget that had the focus before the MenuBar was
entered.
In other Pulldown MenuPanes, unposts the menu.
Outside a menu, if the parent is a manager, this action passes the event to the
parent.
.P
In a Popup MenuPane, unposts the menu and restores keyboard focus to the
widget from which the menu was posted.
.LI "\*L<Enter>\*O:"
In a menu, if keyboard traversal is enabled, this action does nothing.
Otherwise, it draws the shadow in the armed state and calls the
\*LXmNarmCallback\*O callbacks.
.P
If the ToggleButtonGadget is not in a menu and the cursor leaves and then
reenters the ToggleButtonGadget while the button is pressed, this
action restores the button's armed appearance.
.LI "\*L<Leave>\*O:"
In a menu, if keyboard traversal is enabled, this action does nothing.
Otherwise, it draws the shadow in the unarmed state and calls the
\*LXmNdisarmCallback\*O callbacks.
.P
If the ToggleButtonGadget is not in a menu and the cursor leaves the
ToggleButtonGadget while the button is pressed, this action restores
the button's unarmed appearance.
.LE
.SS "Virtual Bindings"
The bindings for virtual keys are vendor specific.
For information about bindings for virtual buttons and keys, see \*LVirtualBindings(3X)\*O.
.ne 10
.nL
.ne 10
.SH RELATED INFORMATION
.na
\*LObject(3X)\*O,
\*LRectObj(3X)\*O,
\*LXmCreateRadioBox(3X)\*O,
\*LXmCreateToggleButtonGadget(3X)\*O,
\*LXmGadget(3X)\*O,
\*LXmLabelGadget(3X)\*O,
\*LXmRowColumn(3X)\*O,
\*LXmToggleButtonGadgetGetState(3X)\*O, and
\*LXmToggleButtonGadgetSetState(3X)\*O.
.ad
