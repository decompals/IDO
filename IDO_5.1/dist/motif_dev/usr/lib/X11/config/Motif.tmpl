XCOMM 
XCOMM (c) Copyright 1989, 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC. 
XCOMM ALL RIGHTS RESERVED 
XCOMM 
XCOMM 
XCOMM Motif Release 1.2.1
XCOMM 
XCOMM   $RCSfile: Motif.tmpl,v $ $Revision: 1.15 $ $Date: 1993/07/27 06:41:43 $
/* SCCSID = OSF/Motif: @(#)Motif.tmpl	3.24 91/08/22 */

/* Include AFTER Project.tmpl */

#ifdef SGIArchitecture
#  include <Motif.tmpl.sgi>
#endif /* SGIArchitecture */
#ifdef AUTOMATION
#ifndef Automation
#define Automation 	YES
#endif
#else
#define NO_AUTOMATION
#endif

#ifdef USE_VISTACC
#ifndef UseVista
#define UseVista
#endif
#ifndef CATCMD
#define CATCMD cat
#endif
#endif


/*  Don't collide with the X installed flag */

#ifndef _MUse
#ifdef UseInstalledMotif
#define _MUse(a,b) a
#else
#define _MUse(a,b) b
#endif
#endif

#ifndef _MUseCat
#if __STDC__ && !defined(UnixCpp)
#ifdef UseInstalledMotif
#define _MUseCat(a,b,c) a##c
#else
#define _MUseCat(a,b,c) b##c
#endif
#else
#ifdef UseInstalledMotif
#define _MUseCat(a,b,c) a/**/c
#else
#define _MUseCat(a,b,c) b/**/c
#endif
#endif
#endif

/* As default Motif is in X tree */
#ifndef MTop
#define MTop $(TOP)
#endif

/* Change this to point to your X tree */
#ifndef XTop
#define XTop $(TOP)
#endif

#ifndef MotifDefines
#define MotifDefines /**/
#endif

#ifndef LibraryDefines
#define LibraryDefines StandardDefines MotifDefines
#endif

/* To compile without SHAPE extension, set this to -DNO_SHAPE */
#ifndef MwmDefines
#define MwmDefines /**/
#endif

#ifndef UilFlags
#define UilFlags /**/
#endif

#ifndef TestDefines
#define TestDefines -DMOTIF1_2 -DX11R5
#endif

#ifndef AutoDefines
#if Automation
#define AutoDefines -DAUTOMATION
#else
#define AutoDefines /**/
#endif
#endif

#ifndef AutoIncludes
#if Automation
#define AutoIncludes -I$(AUTOSCRIPTSRC)
#else
#define AutoIncludes /**/
#endif
#endif

#if Automation
#define TestExtraFilesToClean *.Dat *.Scr
#else 
#define TestExtraFilesToClean *.Dat
#endif 

#ifndef UsrIncDir
#define UsrIncDir IncRoot
#endif

#ifndef XBuildIncRoot
#define XBuildIncRoot $(XTOP)
#endif

/* Place to install .uid files */
#ifndef UidDir
#define UidDir $(LIBDIR)/uid
#endif

#ifndef XmExtraLibraries
#  ifdef SGIArchitecture
#    define XmExtraLibraries -lPW
#  else /* OSF original */
#define XmExtraLibraries /**/
#  endif /* SGIArchitecture */
#endif

#ifndef YaccFlags
#define YaccFlags /**/
#endif

#ifdef SGIArchitecture
/*
 * Define which kind any shared libs we do will be.
 * SGI supports shared libraries, so they are on by default
 */
#  if OSMajorVersion == 4

#    ifdef SharedXmRev
#      undef SharedXmRev
#    endif
#    define SharedXmRev cb		/* Compatibility level "b" as of 1.2 */
#    ifndef SharedLibXm
#      define SharedLibXm    YES	/* This was the only 4.X static lib */
#    endif
#    ifndef DebugLibXm
#      define DebugLibXm    YES
#    endif

#    ifndef SharedLibMrm
#      define SharedLibMrm   NO		/* Never did build one of these */
#    endif
#    ifndef DebugLibMrm
#      define DebugLibMrm   YES
#    endif

#    ifndef SharedLibUil
#      define SharedLibUil   NO		/* Never did build one of these */
#    endif
#    ifndef DebugLibUil
#      define DebugLibUil   YES
#    endif

#  else /* >= 5.X ==> DSO's, no new static shared libraries */
	/* We don't set library versions until we figure out just what to do */

#    ifdef SharedXmRev
#      undef SharedXmRev
#    endif
#    define SharedXmRev
#    ifndef SharedLibXm
#      define SharedLibXm    YES
#    endif
#    ifndef DebugLibXm
#      define DebugLibXm    YES
#    endif

#    ifdef SharedSgmRev
#      undef SharedSgmRev
#    endif
#    define SharedSgmRev
#    ifndef SharedLibSgm
#      define SharedLibSgm    YES
#    endif
#    ifndef DebugLibSgm
#      define DebugLibSgm    YES
#    endif

#    ifdef SharedSgtRev
#      undef SharedSgtRev
#    endif
#    define SharedSgtRev
#    ifndef SharedLibSgt
#      define SharedLibSgt    YES
#    endif
#    ifndef DebugLibSgt
#      define DebugLibSgt    YES
#    endif

#    ifdef SharedSgwRev
#      undef SharedSgwRev
#    endif
#    define SharedSgwRev
#    ifndef SharedLibSgw
#      define SharedLibSgw    YES
#    endif
#    ifndef DebugLibSgw
#      define DebugLibSgw    YES
#    endif

#    ifdef SharedMrmRev
#      undef SharedMrmRev
#    endif
#    define SharedMrmRev
#    ifndef SharedLibMrm
#      define SharedLibMrm   YES
#    endif
#    ifndef DebugLibMrm
#      define DebugLibMrm   YES
#    endif

#    ifdef SharedUilRev
#      undef SharedUilRev
#    endif
#    define SharedUilRev
#    ifndef SharedLibUil
#      define SharedLibUil   YES
#    endif
#    ifndef DebugLibUil
#      define DebugLibUil   YES
#    endif

#  endif /* OSMajorVersion */

      SGI_SHLIB = sgiShlib
    SGI_DSO_LIB = sgiDSOlib

#else /* OSF original
/* Shared libraries are unsupported in 1.2, so are off by default. */
#ifndef SharedLibXm
#define SharedLibXm NO
#endif
#ifndef SharedLibMrm
#define SharedLibMrm NO
#endif
#ifndef SharedLibUil
#define SharedLibUil NO
#endif
#endif /* SGIArchitecture */

#ifndef NormalLibXm
#define NormalLibXm (!SharedLibXm | ForceNormalLib)
#endif
#ifndef NormalLibMrm
#define NormalLibMrm (!SharedLibMrm | ForceNormalLib)
#endif
#ifndef NormalLibUil
#define NormalLibUil (!SharedLibUil | ForceNormalLib)
#endif

#ifdef SGIArchitecture
#ifndef NormalLibSgm
#define NormalLibSgm (!SharedLibSgm | ForceNormalLib)
#endif
#ifndef NormalLibSgt
#define NormalLibSgt (!SharedLibSgt | ForceNormalLib)
#endif
#ifndef NormalLibSgw
#define NormalLibSgw (!SharedLibSgw | ForceNormalLib)
#endif
#endif /* SGIArchitecture */

#ifndef SharedXmRev
#define SharedXmRev 1.2
#endif
#ifndef SharedMrmRev
#define SharedMrmRev 1.2
#endif
#ifndef SharedUilRev
#define SharedUilRev 1.2
#endif

#if HasSharedLibraries
          SOXMREV = SharedXmRev
         SOMRMREV = SharedMrmRev
         SOUILREV = SharedUilRev
#endif

#ifndef XmClientLibs
#define XmClientLibs $(XMLIB) $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
#endif
#ifndef XmClientDepLibs
#define XmClientDepLibs $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
#endif

#ifdef SGIArchitecture

# ifndef SgmClientLibs
#  define SgmClientLibs $(SGMLIB) $(XMLIB) $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
# endif
# ifndef SgmClientDepLibs
#  define SgmClientDepLibs $(DEPSGMLIB) $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
# endif

# ifndef SgtClientLibs
#  define SgtClientLibs $(SGTLIB) $(XMLIB) $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
# endif
# ifndef SgtClientDepLibs
#  define SgtClientDepLibs $(DEPSGTLIB) $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
# endif

# ifndef SgwClientLibs
#  define SgwClientLibs $(SGWLIB) $(XMLIB) $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
# endif
# ifndef SgwClientDepLibs
#  define SgwClientDepLibs $(DEPSGWLIB) $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
# endif

#endif /* SGIArchitecture */

#ifndef MrmClientLibs 
#define MrmClientLibs $(MRESOURCELIB) $(XMLIB) $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
#endif
#ifndef MrmClientDepLibs
#define MrmClientDepLibs $(DEPMRESOURCELIB) $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
#endif

/*
 * BuildClientLibs should be set to a version of MrmClientLibs that can be
 * used to build uil and wmldbcreate.  On the initial build, MrmClientLibs
 * may refer to shared libraries that may not be usable, since some systems
 * require a separate install step.  The default is to use ".a" files
 * initially, or the standard libraries if UseInstalledMotif is YES.
 */
#ifndef BuildClientLibs
#ifdef UseInstalledMotif
#define BuildClientLibs MrmClientLibs
#else
#define BuildClientLibs $(MRESOURCESRC)/libMrm.a $(MWIDGETSRC)/libXm.a $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
#undef NormalLibXm
#undef NormalLibMrm
#define NormalLibXm YES
#define NormalLibMrm YES
#endif
#endif
#ifndef BuildClientDepLibs
#ifdef UseInstalledMotif
#define BuildClientDepLibs MrmClientDepLibs
#else
#define BuildClientDepLibs $(MRESOURCESRC)/libMrm.a $(MWIDGETSRC)/libXm.a $(DEPXTOOLLIB) $(DEPXLIB)
#endif
#endif

#ifndef UilClientLibs
#define UilClientLibs $(UILLIB) $(MRESOURCELIB) $(XMLIB) $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
#endif
#ifndef UilClientDepLibs
#define UilClientDepLibs $(DEPUILLIB) $(DEPMRESOURCELIB) $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
#endif

#ifndef TestClientLibs
#define TestClientLibs $(TESTMALFNS) $(TESTCOMLIB) \
		$(AUTOSCRIPTLIB) $(AUTOUTILLIB) \
		$(AUTOCREATELIB) $(AUTOVISUALLIB) $(AUTOSYNTHLIB) \
	$(XMLIB) $(TESTMALLOCLIB) $(XTOOLLIB) $(XLIB) \
	$(AUTOEXTRALIBS) $(XMEXTRA_LIBS)
#endif
#ifndef TestUilClientLibs
#define TestUilClientLibs $(TESTMALFNS) $(TESTCOMLIB) \
		$(AUTOSCRIPTLIB) $(AUTOUTILLIB) \
		$(AUTOCREATELIB) $(AUTOVISUALLIB) $(AUTOSYNTHLIB) \
	$(UILLIB) $(MRESOURCELIB) $(XMLIB) $(TESTMALLOCLIB) $(XTOOLLIB) \
	$(XLIB) $(AUTOEXTRALIBS) $(XMEXTRA_LIBS)
#endif
#ifndef TestClientDepLibs
#define TestClientDepLibs XmClientDepLibs
#endif
#ifndef TestUilClientDepLibs
#define TestUilClientDepLibs UilClientDepLibs
#endif

/* For separate Motif and X trees */

              XTOP = XTop
              MTOP = MTop
     XBUILDINCROOT = XBuildIncRoot        /* base of X build loc */
      XBUILDINCDIR = $(XBUILDINCROOT)/X11
#if defined(UseInstalled) && !defined(UseInstalledMotif)
          IRULESRC = $(CONFIGSRC)
         IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)
#endif


/* Redefine X locations */

         CLIENTSRC = $(XTOP)/clients
           DEMOSRC = $(XTOP)/demos
            LIBSRC = $(XTOP)/lib
           FONTSRC = $(XTOP)/fonts
        INCLUDESRC = $(XTOP)/X11
         SERVERSRC = $(XTOP)/server
           UTILSRC = $(XTOP)/util
        EXAMPLESRC = $(XTOP)/examples
            DOCSRC = $(XTOP)/doc
            RGBSRC = $(XTOP)/rgb
      EXTENSIONSRC = $(XTOP)/extensions

#ifdef UseInstalledMotif
#if AlternateIncRoot
      TOP_INCLUDES = -I$(INCROOT)	/* All installed; alternate root */
#endif
#else
#ifdef UseInstalled
#if AlternateIncRoot
      TOP_INCLUDES = -I$(INCROOT) -I$(MTOP) /* X installed; alternate root */
#else
      TOP_INCLUDES = -I$(MTOP)			/* X installed only */
#endif
#else
      TOP_INCLUDES = -I$(XTOP) -I$(MTOP)	/* X and Motif source */
#endif
#endif

      USRINCDIR = UsrIncDir
         UIDDIR = UidDir
        TESTSRC = $(MTOP)/tests
  GENERALSRCLIB = $(TESTSRC)/General/lib
  GENERALSRCBIN = $(TESTSRC)/General/bin
   MANUALSRCLIB = $(TESTSRC)/Manual/lib
   MANUALSRCBIN = $(TESTSRC)/Manual/bin
     AUTOSRCLIB = $(TESTSRC)/Auto/lib
     AUTOSRCBIN = $(TESTSRC)/Auto/bin
       COMMONPP = $(GENERALSRCBIN)/Commonpp
         GENRUN = $(GENERALSRCBIN)/Genrun
         MANRUN = $(GENERALSRCBIN)/Manrun
#ifdef DebugLib
  TESTMALLOCSRC = $(GENERALSRCLIB)/Malloc
#endif
#ifdef Automation
     TESTCOMSRC = $(AUTOSRCLIB)/Common
#else
     TESTCOMSRC = $(MANUALSRCLIB)/Common
#endif

/* MTOOLKITSRC  should be removed */
    MTOOLKITSRC = $(TOOLKITSRC)
    MINCLUDESRC = $(MTOP)/X11
        MLIBSRC = $(MTOP)/lib
     MCLIENTSRC = $(MTOP)/clients
       MDEMOSRC = $(MTOP)/demos
     MWIDGETSRC = $(MLIBSRC)/Xm
   MRESOURCESRC = $(MLIBSRC)/Mrm
         UILSRC = $(MCLIENTSRC)/uil

            UIL = _MUse(uil,$(UILSRC)/uil)
         DEPUIL = _MUseCat($(BINDIR),$(UILSRC),/uil)
#ifdef SGIArchitecture
     SGMDEMOSRC = $(MTOP)/sgi/demos/Sgm
   SGMWIDGETSRC = $(MLIBSRC)/Sgm
     SGTDEMOSRC = $(MTOP)/sgi/demos/Sgt
   SGTWIDGETSRC = $(MLIBSRC)/Sgt
     SGWDEMOSRC = $(MTOP)/sgi/demos/Sgw
   SGWWIDGETSRC = $(MLIBSRC)/Sgw
#  if SharedLibXm
#    if sgiShlib /* then do static shared libraries */
         DEPXMLIB = _MUseCat($(USRLIBDIR),$(MWIDGETSRC),/libXm_s.a)
         XMLIB = LoaderLibPrefix _MUse(-lXm_s,$(DEPXMLIB))
#    else /* do DSO's */
/*
 * libXm.so.$(SOXMREV)		is the installed run-time DSO.
 * libXm.so			is the installed sym link to it
 * libXm.so			is the build-time library
 *
 * In other words, libXm.so.$(SOXMREV) only appears on the customer's machine.
 */
       DEPXMLIB =  _MUseCat($(USRLIBDIR),$(MWIDGETSRC),/libXm.so)
          XMLIB = _MUse(-lXm,-L$(MWIDGETSRC) -lXm)
     DEPSGMLIB =  _MUseCat($(USRLIBDIR),$(SGMWIDGETSRC),/libSgm.so)
        SGMLIB = _MUse(-lSgm,-L$(SGMWIDGETSRC) -lSgm)
     DEPSGTLIB =  _MUseCat($(USRLIBDIR),$(SGTWIDGETSRC),/libSgt.so)
        SGTLIB = _MUse(-lSgt,-L$(SGTWIDGETSRC) -lSgt)
     DEPSGWLIB =  _MUseCat($(USRLIBDIR),$(SGWWIDGETSRC),/libSgw.so)
        SGWLIB = _MUse(-lSgw,-L$(SGWWIDGETSRC) -L$(SGMWIDGETSRC) -lSgw)
#    endif
#  else
       DEPXMLIB = _MUseCat($(USRLIBDIR),$(MWIDGETSRC),/libXm.a)
          XMLIB = LoaderLibPrefix _MUse(-lXm,$(DEPXMLIB))
     DEPSGMLIB = _MUseCat($(USRLIBDIR),$(SGMWIDGETSRC),/libSgm.a)
        SGMLIB = LoaderLibPrefix _MUse(-lSgm,$(DEPSGMLIB))
     DEPSGTLIB = _MUseCat($(USRLIBDIR),$(SGTWIDGETSRC),/libSgt.a)
        SGTLIB = LoaderLibPrefix _MUse(-lSgt,$(DEPSGTLIB))
     DEPSGWLIB = _MUseCat($(USRLIBDIR),$(SGWWIDGETSRC),/libSgw.a)
        SGWLIB = LoaderLibPrefix _MUse(-lSgw,$(DEPSGWLIB))
#  endif
#else /* OSF original */
#if SharedLibXm
       DEPXMLIB =  /* _MUseCat($(USRLIBDIR),$(MWIDGETSRC),/libXm.so.$(SOXMREV)) */
          XMLIB = _MUse(-lXm,-L$(MWIDGETSRC) -lXm)
#else
       DEPXMLIB = _MUseCat($(USRLIBDIR),$(MWIDGETSRC),/libXm.a)
          XMLIB = LoaderLibPrefix _MUse(-lXm,$(DEPXMLIB))
#endif
#endif /* SGIArchitecture */

   XMEXTRA_LIBS = XmExtraLibraries

#ifdef SGIArchitecture
#  if SharedLibMrm
DEPMRESOURCELIB = _MUseCat($(USRLIBDIR),$(MRESOURCESRC),/libMrm.so)
   MRESOURCELIB = _MUse(-lMrm,-L$(MRESOURCESRC) -lMrm)
#  else
DEPMRESOURCELIB = _MUseCat($(USRLIBDIR),$(MRESOURCESRC),/libMrm.a)
   MRESOURCELIB = LoaderLibPrefix _MUse(-lMrm,$(DEPMRESOURCELIB))
#  endif
#else /* OSF original */
#if SharedLibMrm
DEPMRESOURCELIB = /* _MUseCat($(USRLIBDIR),$(MRESOURCESRC),/libMrm.so.$(SOMRMREV)) */
   MRESOURCELIB = _MUse(-lMrm,-L$(MRESOURCESRC) -lMrm)
#else
DEPMRESOURCELIB = _MUseCat($(USRLIBDIR),$(MRESOURCESRC),/libMrm.a)
   MRESOURCELIB = LoaderLibPrefix _MUse(-lMrm,$(DEPMRESOURCELIB))
#endif
#endif /* SGIArchitecture */

#ifdef SGIArchtecture
#  if SharedLibUil
      DEPUILLIB = _MUseCat($(USRLIBDIR),$(UILSRC),/libUil.so)
         UILLIB = _MUse(-lUil,-L$(UILSRC) -lUil)
#  else
      DEPUILLIB = _MUseCat($(USRLIBDIR),$(UILSRC),/libUil.a)
         UILLIB = _MUse(-lUil,$(UILSRC)/libUil.a)
#  endif
#else /* OSF original */
#if SharedLibUil
      DEPUILLIB = /* _MUseCat($(USRLIBDIR),$(UILSRC),/libUil.so.$(SOUILREV)) */
         UILLIB = _MUse(-lUil,-L$(UILSRC) -lUil)
#else
      DEPUILLIB = _MUseCat($(USRLIBDIR),$(UILSRC),/libUil.a)
         UILLIB = _MUse(-lUil,$(UILSRC)/libUil.a)
#endif
#endif /* SGIArchitecture */

     TESTCOMLIB = $(TESTCOMSRC)/libCommon.a
#ifdef DebugLib
     TESTMALFNS = $(TESTMALLOCSRC)/MallocInit.o $(TESTMALLOCSRC)/MallocExit.o
  TESTMALLOCLIB = $(TESTMALLOCSRC)/libMalloc.a 
#endif
#ifdef Automation
  AUTOSCRIPTSRC = $(AUTOSRCLIB)/Script
  AUTOSCRIPTLIB = $(AUTOSCRIPTSRC)/libScript.a
   AUTOSYNTHSRC = $(AUTOSRCLIB)/Synth
   AUTOSYNTHLIB = $(AUTOSYNTHSRC)/libSynth.a
  AUTOCREATESRC = $(AUTOSRCLIB)/Create
  AUTOCREATELIB = $(AUTOCREATESRC)/libCreate.a
  AUTOVISUALSRC = $(AUTOSRCLIB)/Visual
  AUTOVISUALLIB = $(AUTOVISUALSRC)/libVisual.a
    AUTOUTILSRC = $(AUTOSRCLIB)/Util
    AUTOUTILLIB = $(AUTOUTILSRC)/libUtil.a
  AUTOEXTRALIBS = -ll -ly -lm
#endif
  LINTMRESOURCE = $(MRESOURCESRC)/libMrm.a
LINTXMWIDGETLIB = $(MWIDGETSRC)/llib-l/Xm.ln
     LINTXMTOOL = $(MTOOLKITSRC)/llib-lXt.ln
     LINTUILLIB = $(UILSRC)/llib-lUil.ln

      YACCFLAGS = YaccFlags
       UILFLAGS = UilFlags

         RM_CMD = $(RM) FilesToClean ExtraFilesToClean TestExtraFilesToClean

    STD_DEFINES = StandardDefines MotifDefines

#if NeedDefaultDepLibs
/*
 */
#if HasSharedLibraries || UseInstalled
        DEPLIBS = $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
#else
        DEPLIBS = $(LOCAL_LIBRARIES)
#endif
        DEPLIBS1 = $(DEPLIBS)
        DEPLIBS2 = $(DEPLIBS)
        DEPLIBS3 = $(DEPLIBS)
#endif /* NeedDefaultDepLibs */

