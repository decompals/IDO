.\" **
.\" **
.\" **  (c) Copyright 1993 by Silicon Graphics
.\" **      All Rights Reserved.
.\" **
.\" **
.\" **
.TH ThumbWheel 3X "" "" "" ""
...\"
.so /usr/share/lib/tmac/motif/header.all
.so /usr/share/lib/tmac/motif/sml
.so /usr/share/lib/tmac/motif/rsml
...\" ____
.SH NAME
\*LSgThumbWheel \*O\(em The ThumbWheel widget class
.iX "SgThumbWheel"
.iX "widget class" "ThumbWheel"
.SH SYNOPSIS
.sS
.iS
\&#include <Sgm/ThumbWheel.h>
.iE
.sE
.SH DESCRIPTION
ThumbWheel is used by an application to allow the user to input or
modify a value either from within a range of values or from an
unbounded (infinite) range.
.PP 
A ThumbWheel has an elongated rectangular region within which a wheel
graphic is displayed.  The user can modify the ThumbWheel's value by
spinning the wheel.  A ThumbWheel can also include a Home Button
located outside the wheel region.  This button allows the user to set
the ThumbWheel's value to a known position.
.SS "Classes"
ThumbWheel inherits behavior and resources from
\*LCore\*O and \*LPrimitive\*O classes.
.PP 
The class pointer is \*LsgThumbWheelWidgetClass\*O.
.PP 
The class name is \*LSgThumbWheel\*O.
.SS "New Resources"
The following table defines a set of widget resources used by the
programmer to specify data.  The programmer can also set the resource
values for the inherited classes to set attributes for this widget.
To reference a resource by name or by class in a .Xdefaults file,
remove the \*LXmN\*O, \*LSgN\*O, \*LXmC\*O, or \*LSgC\*O prefix and
use the remaining letters.  To specify one of the defined values for a
resource in a .Xdefaults file, remove the \*LXm\*O prefix and use the
remaining letters (in either lowercase or uppercase, but include any
underscores between words).  The codes in the access column indicate
if the given resource can be set at creation time (C), set by using
\*LXtSetValues\*O (S), retrieved by using \*LXtGetValues\*O (G), or is
not applicable (N/A).
.P 
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
SgThumbWheel Resource Set
Name	Class	Type	Default	Access
_
.\" ** XmNhighlightOnEnter	XmCHighlightOnEnter	Boolean	False	CSG
.\" ** XmNhighlightThickness	XmCHighlightThickness	Dimension	2	CSG
SgNhomePosition	SgCHomePosition	int	50	CSG
XmNmaximum	XmCMaximum	int	100	CSG
XmNminimum	XmCMinimum	int	0	CSG
SgNangleRange	SgCAngleRange	int	150	CSG
SgNunitsPerRotation	SgCUnitsPerRotation	int	240	CSG
XmNorientation	XmCOrientation	unsigned char	XmVERTICAL	CSG
SgNshowHomeButton	XmCShowHomeButton	Boolean	True	CSG
.\" ** SgNanimate    *** NOT YET IMPLEMENTED ***
.wH .tH
XmNvalue	XmCValue	int	dynamic	CSG
XmNvalueChangedCallback	XmCCallback	XtCallbackList	NULL	C
XmNdragCallback	XmCCallback	XtCallbackList	NULL	C
.TE
.VL  
.LI "\*LSgNhomePosition\*O"
Specifies the "known value" to which the thumb wheel's value is set
when the home button is clicked.
.LI "\*LXmNmaximum\*O"
Specifies the thumb wheel's maximum value.
\*LXmNmaximum\*O must be greater than or equal to \*LXmNminimum\*O.
Setting \*LXmNmaximum\*O equal to \*LXmNminimum\*O indicates an
infinite range.
.LI "\*LXmNminimum\*O"
Specifies the thumb wheel's minimum value.
\*LXmNmaximum\*O must be greater than or equal to \*LXmNminimum\*O.
Setting \*LXmNmaximum\*O equal to \*LXmNminimum\*O indicates an
infinite range.
.LI "\*LSgNangleRange\*O"
Specifies the angular range, in degrees, through which the thumb wheel
is allowed to rotate.  This, in conjunction with \*LXmNmaximum\*O
and \*LXmNminimum\*O, controls the fineness or coarseness of the
wheel control when it is not infinite.  If set to zero, the thumb
wheel has an infinite range.
.P
The default of 150 represents roughly the visible amount of the wheel.
Thus clicking at one end of the wheel and dragging the mouse to the
other end would give roughly the entire range from \*LXmNminimum\*O
to \*LXmNmaximum\*O.
.LI "\*LSgNunitsPerRotation\*O"
Specifies the change in \*LXmNvalue\*O when the wheel is rotated one
full turn around.  This controls the fineness or coarseness of the
wheel control when the range is infinite.
.LI "\*LXmNorientation\*O"
Displays ThumbWheel vertically or horizontally.
This resource can have values of \*LXmVERTICAL\*O and \*LXmHORIZONTAL\*O.
.nL
.ne 6
.LI "\*LSgNshowHomeButton\*O"
Specifies whether a home button should be displayed next to the slider.
If the value is True, the home button is displayed.
.LI "\*LXmNvalue\*O"
Specifies the current position of the thumb wheel, between
\*LXmNminimum\*O and \*LXmNmaximum\*O if the thumb wheel is not infinite.
.LI "\*LXmNvalueChangedCallback\*O"
Specifies the list of callbacks that is called
when the value of the thumb wheel has changed.  The reason
sent by the callback is \*LXmCR_VALUE_CHANGED\*O.
.LI "\*LXmNdragCallback\*O"
Specifies the list of callbacks that is called
when the wheel position changes as the wheel is being
spun.  The reason sent by the callback is \*LXmCR_DRAG\*O.
.LE 
.SS "Inherited Resources"
ThumbWheel inherits behavior and resources from the following
superclasses.  For a complete description of each resource, refer to the
man page for that superclass.
.P 
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
XmPrimitive Resource Set
Name	Class	Type	Default	Access
_
XmNbottomShadowColor	XmCBottomShadowColor	Pixel	dynamic	CSG
XmNbottomShadowPixmap	XmCBottomShadowPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNforeground	XmCForeground	Pixel	dynamic	CSG
XmNhelpCallback	XmCCallback	XtCallbackList	NULL	C
XmNhighlightColor	XmCHighlightColor	Pixel	dynamic	CSG
XmNhighlightOnEnter	XmCHighlightOnEnter	Boolean	False	CSG
XmNhighlightPixmap	XmCHighlightPixmap	Pixmap	dynamic	CSG
XmNhighlightThickness	XmCHighlightThickness	Dimension	0	CSG
.wH .tH
XmNnavigationType	XmCNavigationType	XmNavigationType	XmNONE	CSG
XmNshadowThickness	XmCShadowThickness	Dimension	0	CSG
XmNtopShadowColor	XmCTopShadowColor	Pixel	dynamic	CSG
XmNtopShadowPixmap	XmCTopShadowPixmap	Pixmap	dynamic	CSG
XmNtraversalOn	XmCTraversalOn	Boolean	False	CSG
XmNunitType	XmCUnitType	unsigned char	dynamic	CSG
XmNuserData	XmCUserData	XtPointer	NULL	CSG
.TE
.P 
.wH .in 0 
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
Core Resource Set
Name	Class	Type	Default	Access
_
XmNaccelerators	XmCAccelerators	XtAccelerators	dynamic	CSG
XmNancestorSensitive	XmCSensitive	Boolean	dynamic	G
XmNbackground	XmCBackground	Pixel	dynamic	CSG
XmNbackgroundPixmap	XmCPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNborderColor	XmCBorderColor	Pixel	XtDefaultForeground	CSG
XmNborderPixmap	XmCPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNborderWidth	XmCBorderWidth	Dimension	0	CSG
XmNcolormap	XmCColormap	Colormap	dynamic	CG
XmNdepth	XmCDepth	int	dynamic	CG
XmNdestroyCallback	XmCCallback	XtCallbackList	NULL	C
XmNheight	XmCHeight	Dimension	dynamic	CSG
XmNinitialResourcesPersistent	XmCInitialResourcesPersistent	Boolean	True	C
XmNmappedWhenManaged	XmCMappedWhenManaged	Boolean	True	CSG
XmNscreen	XmCScreen	Screen *	dynamic	CG
.wH .tH
XmNsensitive	XmCSensitive	Boolean	True	CSG
XmNtranslations	XmCTranslations	XtTranslations	dynamic	CSG
XmNwidth	XmCWidth	Dimension	dynamic	CSG
XmNx	XmCPosition	Position	0	CSG
XmNy	XmCPosition	Position	0	CSG
.TE
.wH .in  
.SS "Callback Information"
A pointer to the following structure is passed to each callback:
.sS
.iS
.ta .25i 1.1i
typedef struct
{
	int	\*Vreason\*L;
	XEvent	\*V* event\*L;
	int	\*Vvalue\*L;
} SgThumbWheelCallbackStruct;
.iE
.sE
.wH .fi
.VL .75i 
.LI "\*Vreason\*O"
Indicates why the callback was invoked
.LI "\*Vevent\*O"
Points to the \*LXEvent\*O that triggered the callback
.LI "\*Vvalue\*O"
Is the new thumb wheel value
.LE 
.SS "Behavior"
ThumbWheel behavior is described below:
.VL
.LI "\*LBSelect\ Press\*O\ or\ \*LBDrag\ Press\*O:"
(in slider):  Activates the interactive dragging of the wheel.
.P
(in home button):  Sets the wheel value to \*LSgNhomePosition\*O.
.LI "\*LBSelect\ Motion\*O\ or\ \*LBDrag\ Motion\*O:"
If the button press occurs within the wheel, the subsequent motion
events spin the wheel to follow the motion of the pointer and call the
callbacks for \*LXmNdragCallback\*O.
.LI "\*LBSelect\ Release\*O\ or\ \*LBDrag\ Release\*O:"
If the button press occurs within the wheel and the wheel position
is changed, the callbacks for \*LXmNvalueChangedCallback\*O are called.
.LE
.SS "Virtual Bindings"
The bindings for virtual keys are vendor specific.
For information about bindings for virtual buttons and keys, see \*LVirtualBindings(3X)\*O.
.SH RELATED INFORMATION
.na
\*LSgThumbWheelGetValue(3X)\*O, \*LSgThumbWheelSetValue(3X)\*O, 
\*LPrimitive(3X)\*O, \*LCore(3X)\*O
.ad
