.\" **
.\" **
.\" **  (c) Copyright 1993 by Silicon Graphics
.\" **      All Rights Reserved.
.\" **
.\" **
.\" **
.TH Dial 3X "" "" "" ""
...\"
.so /usr/share/lib/tmac/motif/header.all
.so /usr/share/lib/tmac/motif/sml
.so /usr/share/lib/tmac/motif/rsml
...\" ____
.SH NAME
\*LSgDial \*O\(em The Dial widget class
.iX "SgDial"
.iX "widget class" "Dial"
.SH SYNOPSIS
.sS
.iS
\&#include <Sgm/Dial.h>
.iE
.sE
.SH DESCRIPTION
Dial is used by an application to allow the user to input or
modify a value from within a range of values.
.PP 
A Dial has a rectangular region within which a knob or pointer
graphic is displayed.  The user can modify the Dial's value by
spinning this knob or pointer.
.SS "Classes"
Dial inherits behavior and resources from
\*LCore\*O and \*LPrimitive\*O classes.
.PP 
The class pointer is \*LsgDialWidgetClass\*O.
.PP 
The class name is \*LSgDial\*O.
.SS "New Resources"
The following table defines a set of widget resources used by the
programmer to specify data.  The programmer can also set the resource
values for the inherited classes to set attributes for this widget.
To reference a resource by name or by class in a .Xdefaults file,
remove the \*LXmN\*O, \*LSgN\*O, \*LXmC\*O, or \*LSgC\*O prefix and
use the remaining letters.  To specify one of the defined values for a
resource in a .Xdefaults file, remove the \*LXm\*O prefix and use the
remaining letters (in either lowercase or uppercase, but include any
underscores between words).  The codes in the access column indicate
if the given resource can be set at creation time (C), set by using
\*LXtSetValues\*O (S), retrieved by using \*LXtGetValues\*O (G), or is
not applicable (N/A).
.P 
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
SgDial Resource Set
Name	Class	Type	Default	Access
_
.\" ** XmNhighlightOnEnter	XmCHighlightOnEnter	Boolean	False	CSG
.\" ** XmNhighlightThickness	XmCHighlightThickness	Dimension	2	CSG
SgNdialMarkers	SgCMarkers	int	16	CSG
XmNminimum	XmCMinimum	int	0	CSG
XmNmaximum	XmCMaximum	int	360	CSG
SgNstartAngle	SgCStartAngle	int	0	CSG
SgNangleRange	SgCAngleRange	int	360	CSG
SgNindicatorColor	XmCColor	pixel	Red	CSG
XmNvalue	XmCValue	int	0	CSG
SgNmarkerLength	XmCLength	dimension	8	CSG
SgNdialForeground	SgCForeground	pixel	Red	CSG
SgNdialVisual	SgCDialVisual	unsigned char	SgKNOB	CSG
XmNvalueChangedCallback	XmCCallback	XtCallbackList	NULL	C
XmNdragCallback	XmCCallback	XtCallbackList	NULL	C
.TE
.VL  
.LI "\*LSgNdialMarkers\*O"
Specifies the number of divisions around the perimeter of the dial.
A "tick mark" will be drawn at each division, filled with the color
set by \*LSgNdialForeground\*O.
.LI "\*LXmNmaximum\*O"
Specifies the dial's maximum value.
\*LXmNmaximum\*O must be greater than or equal to \*LXmNminimum\*O.
.LI "\*LXmNminimum\*O"
Specifies the dial's minimum value.
\*LXmNmaximum\*O must be greater than or equal to \*LXmNminimum\*O.
.LI "\*LSgNstartAngle\*O"
Specifies the whole number angle (0-360) where the dial will start
increasing.
.LI "\*LSgNangleRange\*O"
Specifies the angular range, in degrees, through which the dial
is allowed to rotate.  This, in conjunction with \*LXmNmaximum\*O
and \*LXmNminimum\*O, controls the fineness or coarseness of the
dial control.
.LI "\*LSgNindicatorColor\*O"
Specifies the color to be used for filling in the center of the
dial pointer, in \*LSgPOINTER\*O mode.
.nL
.ne 6
.LI "\*LXmNvalue\*O"
Specifies the current position of the dial, between
\*LXmNminimum\*O and \*LXmNmaximum\*O.
.LI "\*LSgNmarkerLength\*O"
Specifies the length (in pixels) of each tick mark on the dial.
The width of each tick mark is derived from the length (length/3).
.LI "\*LSgNdialForeground\*O"
Specifies the color to be used for filling in the tick
marks around the perimeter of the dial.
.LI "\*LSgNdialVisual\*O"
Specifies the look of the dial, either \*LSgKNOB\*O or \*LSgPOINTER\*O.
.LI "\*LXmNvalueChangedCallback\*O"
Specifies the list of callbacks that is called
when the value of the dial has changed.  The reason
sent by the callback is \*LXmCR_VALUE_CHANGED\*O.
.LI "\*LXmNdragCallback\*O"
Specifies the list of callbacks that is called
when the dial position changes as the dial is being
spun.  The reason sent by the callback is \*LXmCR_DRAG\*O.
.LE 
.SS "Inherited Resources"
Dial inherits behavior and resources from the following
superclasses.  For a complete description of each resource, refer to the
man page for that superclass.
.P 
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
XmPrimitive Resource Set
Name	Class	Type	Default	Access
_
XmNbottomShadowColor	XmCBottomShadowColor	Pixel	dynamic	CSG
XmNbottomShadowPixmap	XmCBottomShadowPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNforeground	XmCForeground	Pixel	dynamic	CSG
XmNhelpCallback	XmCCallback	XtCallbackList	NULL	C
XmNhighlightColor	XmCHighlightColor	Pixel	dynamic	CSG
XmNhighlightOnEnter	XmCHighlightOnEnter	Boolean	False	CSG
XmNhighlightPixmap	XmCHighlightPixmap	Pixmap	dynamic	CSG
XmNhighlightThickness	XmCHighlightThickness	Dimension	0	CSG
.wH .tH
XmNnavigationType	XmCNavigationType	XmNavigationType	XmNONE	CSG
XmNshadowThickness	XmCShadowThickness	Dimension	0	CSG
XmNtopShadowColor	XmCTopShadowColor	Pixel	dynamic	CSG
XmNtopShadowPixmap	XmCTopShadowPixmap	Pixmap	dynamic	CSG
XmNtraversalOn	XmCTraversalOn	Boolean	False	CSG
XmNunitType	XmCUnitType	unsigned char	dynamic	CSG
XmNuserData	XmCUserData	XtPointer	NULL	CSG
.TE
.P 
.wH .in 0 
.TS 
center ;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8 lp8 lp8 lp8 lp8.
Core Resource Set
Name	Class	Type	Default	Access
_
XmNaccelerators	XmCAccelerators	XtAccelerators	dynamic	CSG
XmNancestorSensitive	XmCSensitive	Boolean	dynamic	G
XmNbackground	XmCBackground	Pixel	dynamic	CSG
XmNbackgroundPixmap	XmCPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNborderColor	XmCBorderColor	Pixel	XtDefaultForeground	CSG
XmNborderPixmap	XmCPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNborderWidth	XmCBorderWidth	Dimension	0	CSG
XmNcolormap	XmCColormap	Colormap	dynamic	CG
XmNdepth	XmCDepth	int	dynamic	CG
XmNdestroyCallback	XmCCallback	XtCallbackList	NULL	C
XmNheight	XmCHeight	Dimension	dynamic	CSG
XmNinitialResourcesPersistent	XmCInitialResourcesPersistent	Boolean	True	C
XmNmappedWhenManaged	XmCMappedWhenManaged	Boolean	True	CSG
XmNscreen	XmCScreen	Screen *	dynamic	CG
.wH .tH
XmNsensitive	XmCSensitive	Boolean	True	CSG
XmNtranslations	XmCTranslations	XtTranslations	dynamic	CSG
XmNwidth	XmCWidth	Dimension	dynamic	CSG
XmNx	XmCPosition	Position	0	CSG
XmNy	XmCPosition	Position	0	CSG
.TE
.wH .in  
.SS "Callback Information"
A pointer to the following structure is passed to each callback:
.sS
.iS
.ta .25i 1.1i
typedef struct
{
	int	\*Vreason\*L;
	XEvent	\*V* event\*L;
	int	\*Vposition\*L;
} SgDialCallbackStruct;
.iE
.sE
.wH .fi
.VL .75i 
.LI "\*Vreason\*O"
Indicates why the callback was invoked
.LI "\*Vevent\*O"
Points to the \*LXEvent\*O that triggered the callback
.LI "\*Vposition\*O"
Is the new dial value
.LE 
.SS "Behavior"
Dial behavior is described below:
.VL
.LI "\*LBSelect\ Press\*O\ or\ \*LBDrag\ Press\*O:"
Activates the interactive dragging of the dial.
.LI "\*LBSelect\ Motion\*O\ or\ \*LBDrag\ Motion\*O:"
Motion events spin the dial to follow the motion
of the pointer and call the callbacks for
\*LXmNdragCallback\*O.
.LI "\*LBSelect\ Release\*O\ or\ \*LBDrag\ Release\*O:"
If the dial position has changed, the callbacks for
\*LXmNvalueChangedCallback\*O are called.
.LE
.SS "Virtual Bindings"
The bindings for virtual keys are vendor specific.
For information about bindings for virtual buttons and keys, see \*LVirtualBindings(3X)\*O.
.SH RELATED INFORMATION
.na
\*LPrimitive(3X)\*O, \*LCore(3X)\*O
.ad
